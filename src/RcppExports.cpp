// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// informationGainCpp
double informationGainCpp(DataFrame data, String feature);
RcppExport SEXP _SA24231055_informationGainCpp(SEXP dataSEXP, SEXP featureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< String >::type feature(featureSEXP);
    rcpp_result_gen = Rcpp::wrap(informationGainCpp(data, feature));
    return rcpp_result_gen;
END_RCPP
}
// kmeansCpp
List kmeansCpp(NumericMatrix X, int k, int max_iter);
RcppExport SEXP _SA24231055_kmeansCpp(SEXP XSEXP, SEXP kSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(kmeansCpp(X, k, max_iter));
    return rcpp_result_gen;
END_RCPP
}
// kmeansppCpp
List kmeansppCpp(NumericMatrix X, int k, int max_iter);
RcppExport SEXP _SA24231055_kmeansppCpp(SEXP XSEXP, SEXP kSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(kmeansppCpp(X, k, max_iter));
    return rcpp_result_gen;
END_RCPP
}
// naiveBayesCpp
List naiveBayesCpp(NumericMatrix data);
RcppExport SEXP _SA24231055_naiveBayesCpp(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(naiveBayesCpp(data));
    return rcpp_result_gen;
END_RCPP
}
// softmaxCpp
List softmaxCpp(NumericMatrix X, IntegerVector y, NumericMatrix X_test, IntegerVector y_test, double learning_rate, int epochs);
RcppExport SEXP _SA24231055_softmaxCpp(SEXP XSEXP, SEXP ySEXP, SEXP X_testSEXP, SEXP y_testSEXP, SEXP learning_rateSEXP, SEXP epochsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y_test(y_testSEXP);
    Rcpp::traits::input_parameter< double >::type learning_rate(learning_rateSEXP);
    Rcpp::traits::input_parameter< int >::type epochs(epochsSEXP);
    rcpp_result_gen = Rcpp::wrap(softmaxCpp(X, y, X_test, y_test, learning_rate, epochs));
    return rcpp_result_gen;
END_RCPP
}
// spectralClusteringRcpp
IntegerVector spectralClusteringRcpp(NumericMatrix X, int k);
RcppExport SEXP _SA24231055_spectralClusteringRcpp(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(spectralClusteringRcpp(X, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA24231055_informationGainCpp", (DL_FUNC) &_SA24231055_informationGainCpp, 2},
    {"_SA24231055_kmeansCpp", (DL_FUNC) &_SA24231055_kmeansCpp, 3},
    {"_SA24231055_kmeansppCpp", (DL_FUNC) &_SA24231055_kmeansppCpp, 3},
    {"_SA24231055_naiveBayesCpp", (DL_FUNC) &_SA24231055_naiveBayesCpp, 1},
    {"_SA24231055_softmaxCpp", (DL_FUNC) &_SA24231055_softmaxCpp, 6},
    {"_SA24231055_spectralClusteringRcpp", (DL_FUNC) &_SA24231055_spectralClusteringRcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA24231055(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
